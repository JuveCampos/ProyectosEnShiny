shiny::runApp()
runApp()
runApp()
# Setup
# Sys.setlocale("LC_ALL", "es_ES.UTF-8")
# Librerias
library(tidyverse)
#library(shinydashboard)
library(leaflet)
library(shinycssloaders)
library(stringr)
# Mis funciones propias
niveles <- function(x) levels(as.factor(x)) # Saca las categorias de un vector cualquiera!
specify_decimal <- function(x, k) trimws(format(round(x, k), nsmall=k)) # Redondea a un decimal dado!
myLabelFormat = function(..., reverse_order = FALSE){
if(reverse_order){
function(type = "numeric", cuts){
cuts <- sort(cuts, decreasing = T)
}
}else{
labelFormat(...)
}
}
# Leemos base de datos
bd <- readRDS("www/Mapa_municipios.rds")
# Sys.setlocale("LC_ALL", "es_ES.UTF-8")
# Librerias
library(tidyverse)
#library(shinydashboard)
library(leaflet)
library(shinycssloaders)
library(stringr)
# Mis funciones propias
niveles <- function(x) levels(as.factor(x)) # Saca las categorias de un vector cualquiera!
specify_decimal <- function(x, k) trimws(format(round(x, k), nsmall=k)) # Redondea a un decimal dado!
myLabelFormat = function(..., reverse_order = FALSE){
if(reverse_order){
function(type = "numeric", cuts){
cuts <- sort(cuts, decreasing = T)
}
}else{
labelFormat(...)
}
}
# Leemos base de datos
bd <- readRDS("www/Mapa_municipios.rds")
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
# Define la logica del servidor para dibujar un mapa
shinyServer(function(input, output) {
# Aqui vamos a declarar las funciones de las graficas!
# Funcion para hacer el mapa
output$mapa_mpal <- renderLeaflet({
# Filtramos la base de datos
mappa <- bd %>%
filter(NOM_ENT == input$selSolEstado3)
# Generamos las paletas y toda la estetica
pal_ga <- colorNumeric('Blues', domain = na.omit(mappa$ga))
labels <- paste0("<b style = 'color:blue;'>Municipio: </b><br>", mappa$NOM_MUN, ", ", mappa$NOM_ENT)
mnpopup_2 <- paste0("<b>", mappa$NOM_MUN, ", ", mappa$NOM_ENT,   "</b><br>",
"<b style = 'color: green;'>",   mappa$considerado2, "</b><br>",
"<b>", "Índice de Gobierno Abierto: ",    "</b>", specify_decimal(mappa$ga , 2) , "<br>",
"<b>", "Subíndice de Transparencia: ",     "</b>", specify_decimal(mappa$t ,2)  , "<br>",
"<b>", "Subíndice de Participación: ",     "</b>", specify_decimal(mappa$p ,2)  , "<br>") %>%
str_replace(pattern = "style = 'color: green;'>No considerado</b><br><b>Índice de Gobierno Abierto: </b>NA<br><b>Subíndice de Transparencia: </b>NA<br><b>Subíndice de Participación: </b>NA<br>",
replacement = "style = 'color: red;'>No considerado</b>")
# Hacemos el mapa
leaflet(mappa, options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(weight = 0.9,
fillColor = pal_ga(mappa$ga),
color = 'black',
fillOpacity = '0.8',
popup = mnpopup_2,
label = lapply(labels, htmltools::HTML)
) %>%
addLegend(position = "bottomright", pal = pal_ga, values = ~na.omit(mappa$ga),
title = "Índice de Gobierno Abierto", labFormat = myLabelFormat(reverse_order = F))
})
})
library(shiny)
# CHUNK 1 El minimo viable
####################################################
# shinyUI({
#   head <- dashboardHeader()
#   side <- dashboardSidebar()
#   body <- dashboardBody()
#
#   dashboardPage(header = head,
#                 sidebar = side,
#                 body = body,
#                 title = "Titulo",
#                 skin = "yellow"
#                 )
# })
# CHUNK 2 / Todo menos el body
####################################################
# shinyUI({
#   head <- dashboardHeader(title = "Mi primer shiny",
#                           titleWidth = 350,
#                           # Aniadimos una imagen en el encabezado
#                           tags$li(a(href = 'https://www.cide.edu',
#                                     img(src = 'https://www.cide.edu/wp-content/themes/cide_general/img/logo_cide.png',
#                                         title = "CIDE", height = "30px"),
#                                     style = "padding-top:10px; padding-bottom:10px;"),
#                                   class = "dropdown"))
#   side <- dashboardSidebar(
#     width = 350,
#     sidebarMenu(
#       menuItem("Introducción", tabName = "INTRO")
#     )
#   )
#   body <- dashboardBody()
#
#   dashboardPage(header = head,
#                 sidebar = side,
#                 body = body,
#                 title = "Titulo",
#                 skin = "yellow"
#                 )
# })
# CHUNK 3 / EL BODY ESTATICO
####################################################
shinyUI({
head <- dashboardHeader(title = "Mi primer shiny",
titleWidth = 350,
# Aniadimos una imagen en el encabezado
tags$li(a(href = 'https://www.cide.edu',
img(src = 'https://www.cide.edu/wp-content/themes/cide_general/img/logo_cide.png',
title = "CIDE", height = "30px"),
style = "padding-top:10px; padding-bottom:10px;"),
class = "dropdown"))
side <- dashboardSidebar(
width = 350,
sidebarMenu(
menuItem("Resultados Municipales", tabName = "MUNI")
)
)
body <- dashboardBody(
# Metemos la hoja de estilo en forma de Archivo .css
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "estilos.css")
),
tabItems(
tabItem("MUNI",
h1("Resultados municipales"),
p("En esta sección se puede consultar el desempeño de los municipios en el ejercicio de la Métrica de
Gobierno Abierto 2019. Al seleccionar un municipio, se muestra la ficha de información con los resultados
obtenidos en el Índice de Gobierno Abierto y en sus principales dimensiones, así como un mapa estatal que
muestra los municipios considerados en el estudio."),
HTML("<p class='em'>Sólo se tiene información para los municipios incluidos en la muestra de la Métrica de Gobierno Abierto 2019.<p>"),
box(title = 'Seleccionar criterios para la consulta de información', status = 'warning', solidHeader = TRUE, width = 1000,
selectInput("selSolEstado3", label = "Estado", choices = niveles(bd$NOM_ENT),
selected =niveles(bd$NOM_ENT)[1])
,
uiOutput("selSolSORender2")
),
fluidPage(
fluidRow(
column(12,
box(title = "Resultados municipales", status = 'warning', solidHeader = TRUE, width = 100,
tabsetPanel(
tabPanel("Municipios del estado considerados en la Métrica 2019", shinycssloaders::withSpinner(leafletOutput("mapa_mpal", height = 500)))
)
)
)
)
)
)
)
)
dashboardPage(header = head,
sidebar = side,
body = body,
title = "Titulo",
skin = "black"
)
})
