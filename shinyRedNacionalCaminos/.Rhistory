st_transform(crs = 4326)
# Define UI for application that draws a histogram
ui <- navbarPage(title = "Red Caminos", id = "intro",
tabPanel("Mapa Red de Caminos",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")
),
leafletOutput("mapita", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 60, left = "auto", right = 20, bottom = "auto",
width = 330, height = "auto",
h2("Entidades federativas"),
#column(4,
selectInput(inputId = "selEdo", label = "Seleccionar Estado",
choices = edos,
selected = edos[1]
#       )
),
p("Fuente: INEGI. Red Nacional de Caminos 2018.")
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$mapita <- renderLeaflet({
estado <- mapx %>%
filter(ENTIDAD == #"AGUASCALIENTES"
input$selEdo)
edosRoads2 <- readRDS(paste0("www/",input$selEdo, ".rds")
#"AGUASCALIENTES.rds"
)
# Labels
lab <-  lapply(paste0(b("Nombre: "), edosRoads2$NOMBRE, "<br>",
b("Condición: "), edosRoads2$CONDICION, "<br>",
b("Tipo de Vialidad: "), edosRoads2$TIPO_VIAL, "<br>",
b("Cubrimiento: "), paste(edosRoads2$COND_PAV, edosRoads2$RECUBRI), "<br>",
b("Carriles: "), edosRoads2$CARRILES
),
htmltools::HTML)
# Paleta
pal <- colorFactor(palette = c("salmon", "#3182bd"), domain = edosRoads2$isCarretera)
# Mapa guardado en el objeto mapa
(mapa <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
addPolylines(data = estado,
weight = 0.8,
dashArray = c(3,2),
color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
})
}
# Run the application
shinyApp(ui = ui, server = server)
names(bd)
bd <- readRDS("www/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA" ))
names(bd)
bd <- readRDS("www/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR"))
bd <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR"))
bd <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds")
install.packages("lobstr")
bd %>%
lobstr::obj_size()
?obj_size
bd2 %>%
lobstr::obj_size()
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR"))
bd2 %>%
lobstr::obj_size()
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR",-"VELOCIDAD"))
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD"))
bd2 %>%
lobstr::obj_size()
names(bd2)
View(bd2)
bd <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds")
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD", "CODIGO"))
names(bd2)
bd %>%
lobstr::obj_size()
bd2 %>%
lobstr::obj_size()
?obj_size
bd <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds")
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD",
"CODIGO", "CAPITAL", "CVE_EDO"))
bd %>%
lobstr::obj_size()
bd2 %>%
lobstr::obj_size()
bd2 <- readRDS("www/BasesDeDatosCompletas/MICHOACAN DE OCAMPO.rds") %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD",
"CODIGO", "CAPITAL", "CVE_EDO")) %>%
saveRDS(paste0("www/BasesDeDatosAbreviadas/MICHOACAN DE OCAMPO.rds"))
nombres <- list.files("www/BasesDeDatosCompletas")
nombres
i <- "CIUDAD DE MÉXICO.rds"
bd2 <- readRDS(paste0("www/BasesDeDatosCompletas/", i)) %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD",
"CODIGO", "CAPITAL", "CVE_EDO")) %>%
saveRDS(paste0("www/BasesDeDatosAbreviadas/", i))
purrr::map(nombres, abreviar)
abreviar <- function(i){
bd2 <- readRDS(paste0("www/BasesDeDatosCompletas/", i)) %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR","VELOCIDAD",
"CODIGO", "CAPITAL", "CVE_EDO")) %>%
saveRDS(paste0("www/BasesDeDatosAbreviadas/", i))
}
purrr::map(nombres, abreviar)
bdd <- readRDS("www/BasesDeDatosAbreviadas/MORELOS.rds")
View(bdd)
class(bdd)
edos <- list.files("www/BasesDeDatosAbreviadas", pattern = ".rds")
edos
library(shiny)
library(leaflet)
library(sf)
library(tidyverse)
source("https://raw.githubusercontent.com/JuveCampos/DataVizRepo/f134de2ce6bb42478fa6b2a0dd5076705cfca48c/R/R%20-%20leaflet/Mapas_zona_metropolitana/Norte.R")
niveles <- function(x) levels(as.factor(x))
b <- function(x) paste0("<b>", x, "</b>")
edos <- list.files("www/BasesDeDatosAbreviadas", pattern = ".rds") %>%
str_remove(pattern = ".rds")
mapx <- st_read("https://raw.githubusercontent.com/JuveCampos/MexicoSinIslas/master/Sin_islas.geojson") %>%
st_transform(crs = 4326)
# Define UI for application that draws a histogram
ui <- navbarPage(title = "Red Caminos", id = "intro",
tabPanel("Mapa Red de Caminos",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")
),
leafletOutput("mapita", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 60, left = "auto", right = 20, bottom = "auto",
width = 330, height = "auto",
h2("Entidades federativas"),
#column(4,
selectInput(inputId = "selEdo", label = "Seleccionar Estado",
choices = edos,
selected = edos[1]
#       )
),
p("Fuente: INEGI. Red Nacional de Caminos 2018.")
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$mapita <- renderLeaflet({
estado <- mapx %>%
filter(ENTIDAD == #"AGUASCALIENTES"
input$selEdo)
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/",input$selEdo, ".rds")
#"AGUASCALIENTES.rds"
)
# Labels
lab <-  lapply(paste0(b("Nombre: "), edosRoads2$NOMBRE, "<br>",
b("Condición: "), edosRoads2$CONDICION, "<br>",
b("Tipo de Vialidad: "), edosRoads2$TIPO_VIAL, "<br>",
b("Cubrimiento: "), paste(edosRoads2$COND_PAV, edosRoads2$RECUBRI), "<br>",
b("Carriles: "), edosRoads2$CARRILES, "<br>",
b("Velocidad: "), edosRoads2$VELOCIDAD
), htmltools::HTML)
# Paleta
pal <- colorFactor(palette = c("salmon", "#3182bd"), domain = edosRoads2$isCarretera)
# Mapa guardado en el objeto mapa
(mapa <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
addPolylines(data = estado,
weight = 0.8,
dashArray = c(3,2),
color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
})
}
# Run the application
shinyApp(ui = ui, server = server)
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/","AGUASCALIENTES", ".rds")
#"AGUASCALIENTES.rds"
)
View(edosRoads2)
# Pos-procesamiento de bds
# Sugerencia de Juan Javier Santos Ochoa
library(purrr)
nombres <- list.files("www/BasesDeDatosCompletas")
abreviar <- function(i){
bd2 <- readRDS(paste0("www/BasesDeDatosCompletas/", i)) %>%
select(-c("AREA","PERIMETER","COV_","COV_ID","ID_RED",
"ESTATUS","UNION_INI","UNION_FIN","LONGITUD","ANCHO","FECHA_ACT", "ESCALA_VIS",
"NIVEL","PEAJE","ADMINISTRA","JURISDI","CIRCULA","CALIREPR",
"CODIGO", "CAPITAL", "CVE_EDO")) %>%
saveRDS(paste0("www/BasesDeDatosAbreviadas/", i))
}
# Mi primer Purrr
purrr::map(nombres, abreviar)
runApp()
runApp()
runApp()
?downloadButton
runApp()
runApp()
?mapshot
??mapshot
runApp()
install.packages("mapshot")
install.packages("RTools")
runApp()
install.packages("mapview")
runApp()
runApp()
runApp()
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/","AGUASCALIENTES.rds", ".rds")
#"AGUASCALIENTES.rds"
)
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/","AGUASCALIENTES", ".rds")
#"AGUASCALIENTES.rds"
)
# Labels
lab <-  lapply(paste0(b("Nombre: "), edosRoads2$NOMBRE, "<br>",
b("Condición: "), edosRoads2$CONDICION, "<br>",
b("Tipo de Vialidad: "), edosRoads2$TIPO_VIAL, "<br>",
b("Cubrimiento: "), paste(edosRoads2$COND_PAV, edosRoads2$RECUBRI), "<br>",
b("Carriles: "), edosRoads2$CARRILES, "<br>",
b("Velocidad: "), edosRoads2$VELOCIDAD, "km/h"
), htmltools::HTML)
# Paleta
pal <- colorFactor(palette = c("salmon", "#3182bd"), domain = edosRoads2$isCarretera)
# Mapa guardado en el objeto mapa
(mapa$dat <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
addPolylines(data = estado,
weight = 0.8,
dashArray = c(3,2),
color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
# Mapa guardado en el objeto mapa
(mapa$dat <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
# addPolylines(data = estado,
#              weight = 0.8,
#              dashArray = c(3,2),
#              color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
# Mapa guardado en el objeto mapa
(mapita$dat <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
# addPolylines(data = estado,
#              weight = 0.8,
#              dashArray = c(3,2),
#              color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
runApp()
runApp()
runApp()
# Librerias
library(shiny)
library(leaflet)
library(sf)
library(tidyverse)
library(mapview)
# Funciones propias
source("https://raw.githubusercontent.com/JuveCampos/DataVizRepo/f134de2ce6bb42478fa6b2a0dd5076705cfca48c/R/R%20-%20leaflet/Mapas_zona_metropolitana/Norte.R")
niveles <- function(x) levels(as.factor(x))
b <- function(x) paste0("<b>", x, "</b>")
# Lectura de Bases de Datos
edos <- list.files("www/BasesDeDatosAbreviadas", pattern = ".rds") %>%
str_remove(pattern = ".rds")
mapx <- st_read("https://raw.githubusercontent.com/JuveCampos/MexicoSinIslas/master/Sin_islas.geojson") %>%
st_transform(crs = 4326)
# Define UI for application that draws a histogram
ui <- navbarPage(title = "Red Caminos", id = "intro",
tabPanel("Mapa Red de Caminos",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")),
leafletOutput("mapita", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 60, left = "auto", right = 20, bottom = "auto",
width = 330, height = "auto",
h2("Entidades federativas"),
#column(4,
selectInput(inputId = "selEdo", label = "Seleccionar Estado",
choices = edos,
selected = edos[1]),
br(), downloadButton("dl", label = "Descargar mapa"), br(),
p("Fuente: INEGI. Red Nacional de Caminos 2018.")
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
output$dl <- downloadHandler(
filename = "ReDcAMINOS.png",
content = function(file) {
mapshot(mapita$dat, file = file)
}
)
mapita <- reactiveValues(dat = 0)
output$mapita <- renderLeaflet({
estado <- mapx %>%
filter(ENTIDAD == input$selEdo)
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/",input$selEdo, ".rds"))
# Labels
lab <-  lapply(paste0(b("Nombre: "), edosRoads2$NOMBRE, "<br>",
b("Condición: "), edosRoads2$CONDICION, "<br>",
b("Tipo de Vialidad: "), edosRoads2$TIPO_VIAL, "<br>",
b("Cubrimiento: "), paste(edosRoads2$COND_PAV, edosRoads2$RECUBRI), "<br>",
b("Carriles: "), edosRoads2$CARRILES, "<br>",
b("Velocidad: "), edosRoads2$VELOCIDAD, "km/h"
), htmltools::HTML)
# Paleta
pal <- colorFactor(palette = c("salmon", "#3182bd"), domain = edosRoads2$isCarretera)
# Mapa guardado en el objeto mapa
(mapita$dat <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
addPolylines(data = estado,
weight = 0.8,
dashArray = c(3,2),
color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
# Librerias
library(shiny)
library(leaflet)
library(sf)
library(tidyverse)
library(mapview)
# Funciones propias
source("https://raw.githubusercontent.com/JuveCampos/DataVizRepo/f134de2ce6bb42478fa6b2a0dd5076705cfca48c/R/R%20-%20leaflet/Mapas_zona_metropolitana/Norte.R")
niveles <- function(x) levels(as.factor(x))
b <- function(x) paste0("<b>", x, "</b>")
# Lectura de Bases de Datos
edos <- list.files("www/BasesDeDatosAbreviadas", pattern = ".rds") %>%
str_remove(pattern = ".rds")
mapx <- st_read("https://raw.githubusercontent.com/JuveCampos/MexicoSinIslas/master/Sin_islas.geojson") %>%
st_transform(crs = 4326)
# Define UI for application that draws a histogram
ui <- navbarPage(title = "Red Caminos", id = "intro",
tabPanel("Mapa Red de Caminos",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")),
leafletOutput("mapita", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 60, left = "auto", right = 20, bottom = "auto",
width = 330, height = "auto",
h2("Entidades federativas"),
#column(4,
selectInput(inputId = "selEdo", label = "Seleccionar Estado",
choices = edos,
selected = edos[1]),
fluidPage(
fluidRow(
column(2, offset = 5,
downloadButton("dl", label = "Descargar mapa")
)
)
),
br(),br(),
p("Fuente: INEGI. Red Nacional de Caminos 2018.")
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
output$dl <- downloadHandler(
filename = "ReDcAMINOS.png",
content = function(file) {
mapshot(mapita$dat, file = file)
}
)
mapita <- reactiveValues(dat = 0)
output$mapita <- renderLeaflet({
estado <- mapx %>%
filter(ENTIDAD == input$selEdo)
edosRoads2 <- readRDS(paste0("www/BasesDeDatosAbreviadas/",input$selEdo, ".rds"))
# Labels
lab <-  lapply(paste0(b("Nombre: "), edosRoads2$NOMBRE, "<br>",
b("Condición: "), edosRoads2$CONDICION, "<br>",
b("Tipo de Vialidad: "), edosRoads2$TIPO_VIAL, "<br>",
b("Cubrimiento: "), paste(edosRoads2$COND_PAV, edosRoads2$RECUBRI), "<br>",
b("Carriles: "), edosRoads2$CARRILES, "<br>",
b("Velocidad: "), edosRoads2$VELOCIDAD, "km/h"
), htmltools::HTML)
# Paleta
pal <- colorFactor(palette = c("salmon", "#3182bd"), domain = edosRoads2$isCarretera)
# Mapa guardado en el objeto mapa
(mapita$dat <- leaflet(edosRoads2) %>%
addProviderTiles("CartoDB.Positron",
options = providerTileOptions(opacity = 0.55)) %>%
addPolylines(data = estado,
weight = 0.8,
dashArray = c(3,2),
color = "black") %>%
addPolylines(weight = edosRoads2$isCarretera*10,
opacity = 0.9,
label = lab,
color = pal(edosRoads2$isCarretera)) %>%
addLegend(title = "Vialidades",
colors = c("salmon", "#3182bd"),
labels = c("Caminos", "Carreteras"),
position = "bottomright") %>%
norte(posicion = "topright"))
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
